<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docs on bwplay-cli</title><link>https://goakley.github.io/bwplay-cli/docs/</link><description>Recent content in Docs on bwplay-cli</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://goakley.github.io/bwplay-cli/docs/index.xml" rel="self" type="application/rss+xml"/><item><title>Getting Started</title><link>https://goakley.github.io/bwplay-cli/docs/getting-started/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://goakley.github.io/bwplay-cli/docs/getting-started/</guid><description>Getting Started # You can quickly start working with bwplay-cli by installing the package from npm and creating a sample project config:
npm i bwplay-cli npm exec -- bwplay-cli new Create a simple main.js file in the same directory:
const canvas = document.createElement(&amp;#39;canvas&amp;#39;); document.body.appendChild(canvas); const ctx = canvas.getContext(&amp;#39;2d&amp;#39;); canvas.style.display = &amp;#39;block&amp;#39;; canvas.style.margin = &amp;#39;0px&amp;#39;; canvas.style.padding = &amp;#39;0px&amp;#39;; canvas.style.width = &amp;#39;100%&amp;#39;; canvas.style.height = &amp;#39;100%&amp;#39;; const draw = () =&amp;gt; { window.</description></item><item><title>Configuration</title><link>https://goakley.github.io/bwplay-cli/docs/configuration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://goakley.github.io/bwplay-cli/docs/configuration/</guid><description>Configuration # bwplay-cli needs some light configuration in order to understand the structure of your project.
Assumptions # bwplay-cli makes some assumptions about your project - if these do not hold true, this tooling may not work for you.
Your code takes care of building its own DOM. All generated HTML assumes that your JavaScript is okay with a blank HTML document (i.e. an empty &amp;lt;body&amp;gt; element). The most common situation is that the entire document is just be a single &amp;lt;canvas&amp;gt; object, created and inserted by the first JavaScript code that executes.</description></item><item><title>Code Generator</title><link>https://goakley.github.io/bwplay-cli/docs/code-generator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://goakley.github.io/bwplay-cli/docs/code-generator/</guid><description>Code Generator # bwplay-cli can generate bits of code to ease the development process.
Audio # If your project has audio assets (specified by the audioFiles setting), bwplay-cli can generate code that exports an Audio object, which exposes all your audio assets as strictly-typed HTMLAudioElements.
bwplay-cli generate-audio [--stdout] [--unpacked] Each audio element is named after its location in your project directory. Since assets are often stored in a common subdirectory, the common directory prefix is removed from the names of the members of the Audio object.</description></item><item><title>Development Server</title><link>https://goakley.github.io/bwplay-cli/docs/development-server/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://goakley.github.io/bwplay-cli/docs/development-server/</guid><description>Development Server # bwplay-cli has a built-in development server, with the goal of making it easier to iterate on your project.
bwplay-cli serve This server takes care of a number of tasks on your behalf, including:
Providing an HTML file at the root of the server that loads your project&amp;rsquo;s JavaScript Limiting itself to only serving files that are part of your project Live re-generation of asset code The HTML file at the root of the server is minimal - it has a body with no padding or margins that contains only &amp;lt;script&amp;gt; tags (which reference all the JavaScript files configured in the project settings).</description></item><item><title>Exporting</title><link>https://goakley.github.io/bwplay-cli/docs/exporting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://goakley.github.io/bwplay-cli/docs/exporting/</guid><description>Exporting # bwplay-cli allows you to export your project to different platforms. This makes it easy to distribute your game to other (non-technical) people.
bwplay-cli export There is no cross-compilation - different targets will runs your JavaScript as-is, just in different contexts. Your code in the exports is the same as it was in your project.
Before Exporting # The export process will include the assets and JavaScript specified in your project settings.</description></item></channel></rss>